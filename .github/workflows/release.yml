# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: build and release
on:
  push:
    tags:
      - "release-v*"

env:
  FLUTTER_VERSION: 3.35.3
  GIST_ID: 3fc0adf7ac60b351a9432e9f8ed4e9d3
  LINUX_DEPENDENCIES: git wget unzip python3 zip xz-utils curl clang cmake ninja-build pkg-config libgtk-3-dev libblkid-dev liblzma-dev libjsoncpp-dev cmake-data libjsoncpp25 libsecret-1-dev libsecret-1-0 librhash0 libsqlite3-dev libappindicator3-dev gettext libwebkit2gtk-4.1-dev libasound2-dev libmpv-dev mpv

jobs:

  build-windows:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true
      - name: Download kitty.umd.js from gist
        run: |
          echo "ðŸ“¥ Downloading kitty.umd.js from gist..."
          mkdir -p packages/xi/assets/js
          curl -L -o packages/xi/assets/js/kitty.umd.js "https://gist.githubusercontent.com/d1y/${{ env.GIST_ID }}/raw/kitty.umd.js"
          echo "âœ… Downloaded kitty.umd.js"
        shell: bash

      - name: Install project dependencies
        run: |
          ./script/fetch_git_info.ps1
          flutter pub get
          flutter pub run build_runner build
          # dart run script/add_builtin.dart > lib/builtin/maccms/maccms.dart
          $env:version = "${{ github.ref_name }}" -replace "^release-v", ""
          dart run script/replace_version.dart
      - name: Generate templates
        run: |
          cd JS/cli
          bun install
          cd ../../packages/xi/lib/adapters/templates
          bun install
          bun run build
      - name: Build windows
        run: |
          flutter config --enable-windows-desktop
          flutter build windows --release
      - name: Add Windows manifest
        run: |
          $dest = "build\windows\x64\runner\Release\"
          cp windows\runner\resources\app_icon.ico $dest\app.ico
      - name: Archive Release
        uses: thedoctor0/zip-release@master
        with:
          type: 'zip'
          filename: catmovie-windows.zip
          directory: build/windows/x64/runner/Release
      - name: Upload assets
        uses: actions/upload-artifact@v4
        with:
          name: windows
          path: build/windows/x64/runner/Release/catmovie-windows.zip

  build-linux:
    runs-on: ubuntu-22.04

    env:
      TARBALL_NAME: catmovie-linux-x86_64.tar.gz

    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true
      - name: Disable Google Analytics
        run: flutter config --no-analytics
      - name: Download kitty.umd.js from gist
        run: |
          echo "ðŸ“¥ Downloading kitty.umd.js from gist..."
          mkdir -p packages/xi/assets/js
          curl -L -o packages/xi/assets/js/kitty.umd.js \
            "https://gist.githubusercontent.com/d1y/${{ env.GIST_ID }}/raw/kitty.umd.js"
          echo "âœ… Downloaded kitty.umd.js"

      - name: Install dependencies
        run: |
          flutter pub get
          flutter pub run build_runner build
      - name: Generate templates
        run: |
          cd JS/cli
          bun install
          cd ../../packages/xi/lib/adapters/templates
          bun install
          bun run build
      - name: Enable Linux support
        run: flutter config --enable-linux-desktop
      - name: Install dependencies
        run: sudo apt update && sudo apt-get install -y ${{ env.LINUX_DEPENDENCIES }} || true
      - name: Build
        run: |
          bash script/fetch_git_info.sh
          # dart run script/add_builtin.dart > lib/builtin/maccms/maccms.dart
          export version=$(echo "${{ github.ref_name }}" | sed 's/^release-v//')
          dart run script/replace_version.dart
          flutter build linux --release
      - name: Create tarball
        run: |
          cd build/linux/x64/release/bundle
          tar -czf ../${{ env.TARBALL_NAME }} *
      - name: Upload assets
        uses: actions/upload-artifact@v4
        with:
          name: x86_64_linux
          path: build/linux/x64/release/${{ env.TARBALL_NAME }}

  build-and-release:
    if: ${{ github.actor == 'd1y' }}
    runs-on: macos-latest
    steps:
      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: 16.3
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      - uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: "17"
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true
          channel: "stable"
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Generate release notes
        run: node script/draft-release-notes.js > release-notes.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Download kitty.umd.js from gist
        run: |
          echo "ðŸ“¥ Downloading kitty.umd.js from gist..."
          mkdir -p packages/xi/assets/js
          curl -L -o packages/xi/assets/js/kitty.umd.js \
            "https://gist.githubusercontent.com/d1y/${{ env.GIST_ID }}/raw/kitty.umd.js"
          echo "âœ… Downloaded kitty.umd.js"

      - name: Build android apk
        run: |
          bash script/fetch_git_info.sh
          flutter pub get
          flutter pub run build_runner build
          # dart run script/add_builtin.dart > lib/builtin/maccms/maccms.dart
          export version=$(echo "${{ github.ref_name }}" | sed 's/^release-v//')
          dart run script/replace_version.dart
      - name: Generate templates
        run: |
          cd JS/cli
          bun install
          cd ../../packages/xi/lib/adapters/templates
          bun install
          bun run build
      - name: Build APK and IPA
        run: |
          flutter build apk --release
          flutter build apk --release --split-per-abi
          cp build/app/outputs/flutter-apk/app-arm64-v8a-release.apk catmovie.apk
          cp build/app/outputs/flutter-apk/app-release.apk catmovie-universal.apk
          cp build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk catmovie-legacy.apk
          cp build/app/outputs/flutter-apk/app-x86_64-release.apk catmovie-x86_64.apk

      - name: Build iOS ipa
        run: |
          flutter build ios --release --no-codesign
          cd build/ios/iphoneos
          mkdir Payload
          cd Payload
          ln -s ../Runner.app
          cd ..
          zip -r catmovie.ipa Payload

      - name: Build macOS
        run: |
          flutter config --enable-macos-desktop
          flutter build macos --release
          cd build/macos/Build/Products/Release
          zip -ry catmovie-mac.zip çŒ«è¶£.app/*

      - uses: actions/download-artifact@v4
        with:
          name: windows
      - uses: actions/download-artifact@v4
        with:
          name: x86_64_linux

      - uses: softprops/action-gh-release@v2
        with:
          body_path: release-notes.txt
          prerelease: false
          files: |
            catmovie-windows.zip
            catmovie-linux-x86_64.tar.gz
            catmovie.apk
            catmovie-universal.apk
            catmovie-legacy.apk
            catmovie-x86_64.apk
            build/ios/iphoneos/catmovie.ipa
            build/macos/Build/Products/Release/catmovie-mac.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
